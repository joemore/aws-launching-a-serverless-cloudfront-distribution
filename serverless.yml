# NOTE 0 - This ain't working! ðŸ˜­

# Note 1 - To add a custom domain Alias, please make sure you have a valid
# certificate for the domain in AWS Certificate Manager (ACM) preferably in us-east-1 region

# Note 2 - Once your Distro has deployed, go ro Route 53 and add a CNAME for subdomain.domain.com and point it to the
# cloudfront domain name e.g. "xxxxxxxx.cloudfront.net"

# Note 3 - Adding CloudFlare (To be added)

# Note 5 - Try to only edit the values below in the custom section

custom:
  IAM_PROFILE: default
  SERVICE_NAME: skeletapp-s3-cloudfront
  MY_REGION: us-east-1
  MY_BUCKET: skeletapp-private-bucket
  MY_BUCKET_ORIGIN_ID: MyS3Origin
  MY_DISTRO_COMMENT: HotRabbit Distro
  MY_DISTRO_PRICE_CLASS: PriceClass_100 # Set the price class to "Use Only North America and Europe" (PriceClass_200 is also europe etc, PriceClass_all is basically everywhere AWS supports)
  MY_DOMAIN_ALIAS: tests3.skeletapp.co.uk
  MY_ACM_CERTIFICATE_ARN: arn:aws:acm:us-east-1:150145317413:certificate/e63876fc-2335-4a46-b92e-4a83cd656084 # Your SSL Cert found in https://us-east-1.console.aws.amazon.com/acm/home?region=us-east-1

# Try not to edit after here...

service: ${self:custom.SERVICE_NAME}

provider:
  name: aws
  profile: ${self:custom.IAM_PROFILE}
  runtime: nodejs18.x
  region: ${self:custom.MY_REGION}

resources:
  Resources:
    # The S3 Bucket
    MyS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.MY_BUCKET}
        AccessControl: Private # Set the bucket access control to private
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - "*"
              AllowedMethods:
                - HEAD
                - GET
              AllowedHeaders:
                - "*"

    # The S3 Bucket Policy
    PrivateBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        PolicyDocument:
          Id: MyPolicy
          Version: "2012-10-17"
          Statement:
            - Sid: AllowCloudFrontServicePrincipalReadOnly
              Effect: Allow
              Principal: { "Service": "cloudfront.amazonaws.com" }
              Action:
                - s3:GetObject
              Resource: !Sub arn:aws:s3:::${MyS3Bucket}/*
              Condition:
                StringEquals:
                  "aws:SourceArn": !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${MyCloudFrontDistribution}
        Bucket:
          Ref: MyS3Bucket
    OriginAccessControl:
      Type: AWS::CloudFront::OriginAccessControl
      Properties:
        OriginAccessControlConfig:
          Name: ${self:custom.MY_BUCKET_ORIGIN_ID}
          OriginAccessControlOriginType: s3
          SigningBehavior: always
          SigningProtocol: sigv4

    # The Cloud Front Distribution
    MyCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          IPV6Enabled: true
          Comment: ${self:custom.MY_DISTRO_COMMENT} # Add a description to the CloudFront distribution
          PriceClass: ${self:custom.MY_DISTRO_PRICE_CLASS} # Set the price class to "Use Only North America and Europe"

          #Custom Domain alias (and certificate) - uncomment 5 lines below of below to use the CloudFront domain name i.e. xxxxxxxx.cloudfront.net
          Aliases:
            - ${self:custom.MY_DOMAIN_ALIAS} # Replace with your desired CloudFront distribution alias (Make sure you have a cert in "AWS Certificate Manager (ACM)" in the us-east-1 region)
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.MY_ACM_CERTIFICATE_ARN} # Replace with your ACM certificate ARN
            SslSupportMethod: sni-only

          Origins:
            - DomainName: ${self:custom.MY_BUCKET}.s3.${self:custom.MY_REGION}.amazonaws.com
              Id: ${self:custom.MY_BUCKET_ORIGIN_ID}
              S3OriginConfig: {}
              OriginAccessControlId: !GetAtt OriginAccessControl.Id
          DefaultCacheBehavior:
            AllowedMethods: [GET, HEAD, OPTIONS]
            TargetOriginId: ${self:custom.MY_BUCKET_ORIGIN_ID}
            DefaultTTL: 0
            MinTTL: 0
            MaxTTL: 0
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # No caching
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03 # SecurityHeadersPolicy
            ViewerProtocolPolicy: redirect-to-https
          DefaultRootObject: index.html

          HttpVersion: http2
    Route53RecordIPv4:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneName: skeletapp.co.uk.
        Name: ${self:custom.MY_DOMAIN_ALIAS}.
        Type: A
        AliasTarget:
          DNSName: !GetAtt MyCloudFrontDistribution.DomainName
          HostedZoneId: Z2FDTNDATAQYW2
    Route53RecordIPv6:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneName: skeletapp.co.uk.
        Name: ${self:custom.MY_DOMAIN_ALIAS}.
        Type: AAAA
        AliasTarget:
          DNSName: !GetAtt MyCloudFrontDistribution.DomainName
          HostedZoneId: Z2FDTNDATAQYW2
